{
  "contractName": "League",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betID",
          "type": "uint256"
        }
      ],
      "name": "NewBet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bets",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "leagueID",
          "type": "uint32"
        },
        {
          "internalType": "int256",
          "name": "totalScore",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tournamentID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_leagueName",
          "type": "string"
        }
      ],
      "name": "createLeague",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBet",
      "outputs": [
        {
          "internalType": "uint16[6]",
          "name": "",
          "type": "uint16[6]"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "leagues",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tournamentID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "leagueName",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint16[6]",
          "name": "_golferIDs",
          "type": "uint16[6]"
        },
        {
          "internalType": "uint32",
          "name": "_leagueID",
          "type": "uint32"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_golferID0",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_golferID1",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_golferID2",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_golferID3",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_golferID4",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_golferID5",
          "type": "uint16"
        },
        {
          "internalType": "uint32",
          "name": "_leagueID",
          "type": "uint32"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tournamentID",
          "type": "uint256"
        }
      ],
      "name": "updateUserScores",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betID\",\"type\":\"uint256\"}],\"name\":\"NewBet\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"leagueID\",\"type\":\"uint32\"},{\"internalType\":\"int256\",\"name\":\"totalScore\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tournamentID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_leagueName\",\"type\":\"string\"}],\"name\":\"createLeague\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBet\",\"outputs\":[{\"internalType\":\"uint16[6]\",\"name\":\"\",\"type\":\"uint16[6]\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"leagues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tournamentID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"leagueName\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint16[6]\",\"name\":\"_golferIDs\",\"type\":\"uint16[6]\"},{\"internalType\":\"uint32\",\"name\":\"_leagueID\",\"type\":\"uint32\"}],\"name\":\"placeBet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_golferID0\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_golferID1\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_golferID2\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_golferID3\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_golferID4\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_golferID5\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_leagueID\",\"type\":\"uint32\"}],\"name\":\"placeBet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tournamentID\",\"type\":\"uint256\"}],\"name\":\"updateUserScores\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/S/GitHub/blockchain-fantasy-golf/contracts/League.sol\":\"League\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/S/GitHub/blockchain-fantasy-golf/contracts/League.sol\":{\"keccak256\":\"0x89b6a5486736e8d575e1d5322abde77d719d0bc002bf1653c698314f1eeddca7\",\"urls\":[\"bzz-raw://9e1368e81f7e082f2c4e0824c48792cb51205096c03aec3999bf6f7bc5d6af26\",\"dweb:/ipfs/QmWxSr7jnHMo51uwC9asfbhaymoGXzzMZKjatnj3pDY6WF\"]},\"/S/GitHub/blockchain-fantasy-golf/contracts/LeagueData.sol\":{\"keccak256\":\"0x55f2ca4128478c14a20c40db227521c67d5800958f8d1a42e8a585a0f5b1409f\",\"urls\":[\"bzz-raw://3786ceffce0e5fd4fc524b6d4ce3bcaac52ba192762e3b7b4c78bcb2893b2f6c\",\"dweb:/ipfs/QmTjMTgW5C76p5qqdtoJrBg6YMXkfJJirGrCySnmEjQQcn\"]},\"/S/GitHub/blockchain-fantasy-golf/contracts/LeagueMembership.sol\":{\"keccak256\":\"0x0282f89b1920cefce1a08835d61b64588914a8d3665d803fd2c81e9638703d03\",\"urls\":[\"bzz-raw://3beae6ecbdd1a3745d6f72d1f8a23698a129346143a6cb956b6a7934e45c76db\",\"dweb:/ipfs/QmQA89xqW31Z2JTYJ6Q4svK3eqZPDrTveYDkt4nGxN5MJH\"]},\"/S/GitHub/blockchain-fantasy-golf/contracts/LeagueOwnership.sol\":{\"keccak256\":\"0x3ae866e570a15319f7bb40ba6d7d0cb84ae73930b81b6e99562ce2b3b3192bfd\",\"urls\":[\"bzz-raw://2f3a5f4f06abbedfab5ccf30399fb9afad0ff042c9b9280ec5c8c0b871e3abab\",\"dweb:/ipfs/QmetmQZweifRHTn97DCofzpUAPv7ku7WhRzmCmeKgt2FKu\"]}},\"version\":1}",
  "bytecode": "0x6080604052735b0c9dc0afe417858dcc8db5269e47abc572aa776000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100c657600080fd5b50611124806100d66000396000f3fe60806040526004361061007b5760003560e01c80636f9fb98a1161004e5780636f9fb98a1461029657806381bbb705146102c15780638e4d6d08146102fc578063c648fefe146103845761007b565b8063107ab3e71461008057806320835e8c1461015257806322af00fa146101bf57806352dcdc0e14610221575b600080fd5b34801561008c57600080fd5b50610150600480360360408110156100a357600080fd5b8101908080359060200190929190803590602001906401000000008111156100ca57600080fd5b8201836020820111156100dc57600080fd5b803590602001918460018302840111640100000000831117156100fe57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061043f565b005b34801561015e57600080fd5b506101676105ad565b6040518084600660200280838360005b83811015610192578082015181840152602081019050610177565b505050509050018363ffffffff1663ffffffff168152602001828152602001935050505060405180910390f35b3480156101cb57600080fd5b506101f8600480360360208110156101e257600080fd5b81019080803590602001909291905050506106e2565b604051808363ffffffff1663ffffffff1681526020018281526020019250505060405180910390f35b610294600480360360e081101561023757600080fd5b810190808060c001906006806020026040519081016040528092919082600660200280828437600081840152601f19601f8201169050808301925050505050509192919290803563ffffffff169060200190929190505050610723565b005b3480156102a257600080fd5b506102ab6108e2565b6040518082815260200191505060405180910390f35b3480156102cd57600080fd5b506102fa600480360360208110156102e457600080fd5b81019080803590602001909291905050506108ea565b005b610382600480360360e081101561031257600080fd5b81019080803561ffff169060200190929190803561ffff169060200190929190803561ffff169060200190929190803561ffff169060200190929190803561ffff169060200190929190803561ffff169060200190929190803563ffffffff169060200190929190505050610bf2565b005b34801561039057600080fd5b506103bd600480360360208110156103a757600080fd5b8101908080359060200190929190505050610d71565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156104035780820151818401526020810190506103e8565b50505050905090810190601f1680156104305780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461048b57600080fd5b60006002604051806040016040528085815260200184815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010190805190602001906104f5929190610ef1565b505050905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550336006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826007600083815260200190815260200160002081905550505050565b6105b5610f71565b6000806105c0610f93565b6003600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061060c57fe5b906000526020600020906003020160405180606001604052908160008201600680602002604051908101604052809291908260068015610689576020028201916000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116106505790505b505050505081526020016001820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600282015481525050905080600001518160200151826040015182925093509350935050909192565b600381815481106106ef57fe5b90600052602060002090600302016000915090508060010160009054906101000a900463ffffffff16908060020154905082565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461076f57600080fd5b81600080905060008090505b60068110156107b2576107a183826006811061079357fe5b602002015161ffff16610e3a565b82019150808060010191505061077b565b508034146107bf57600080fd5b60006001600360405180606001604052808881526020018763ffffffff168152602001600081525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001906006610829929190610fc0565b5060208201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060408201518160020155505003905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fb4c55452b3a0fcd370281067a5378b1d6b0adb1584de15f43fbe8dd04021610b816040518082815260200191505060405180910390a15050505050565b600047905090565b60008090505b600380549050811015610bee57610905610f93565b6003828154811061091257fe5b90600052602060002090600302016040518060600160405290816000820160068060200260405190810160405280929190826006801561098f576020028201916000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116109565790505b505050505081526020016001820160009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160028201548152505090506109d261105d565b6002826020015163ffffffff16815481106109e957fe5b906000526020600020906002020160405180604001604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aa55780601f10610a7a57610100808354040283529160200191610aa5565b820191906000526020600020905b815481529060010190602001808311610a8857829003601f168201915b50505050508152505090506000826040015190508482600001511415610bbb5760008090505b8360000151506006811015610bb957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ff6e34985600001518360068110610b2857fe5b6020020151886040518363ffffffff1660e01b8152600401808361ffff1681526020018281526020019250505060206040518083038186803b158015610b6d57600080fd5b505afa158015610b81573d6000803e3d6000fd5b505050506040513d6020811015610b9757600080fd5b8101908080519060200190929190505050820191508080600101915050610acb565b505b8060038581548110610bc957fe5b90600052602060002090600302016002018190555050505080806001019150506108f0565b5050565b610bfa610f71565b8781600060068110610c0857fe5b602002019061ffff16908161ffff16815250508681600160068110610c2957fe5b602002019061ffff16908161ffff16815250508581600260068110610c4a57fe5b602002019061ffff16908161ffff16815250508481600360068110610c6b57fe5b602002019061ffff16908161ffff16815250508381600460068110610c8c57fe5b602002019061ffff16908161ffff16815250508281600560068110610cad57fe5b602002019061ffff16908161ffff16815250503073ffffffffffffffffffffffffffffffffffffffff166352dcdc0e82846040518363ffffffff1660e01b81526004018083600660200280838360005b83811015610d18578082015181840152602081019050610cfd565b505050509050018263ffffffff1663ffffffff16815260200192505050600060405180830381600087803b158015610d4f57600080fd5b505af1158015610d63573d6000803e3d6000fd5b505050505050505050505050565b60028181548110610d7e57fe5b9060005260206000209060020201600091509050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e305780601f10610e0557610100808354040283529160200191610e30565b820191906000526020600020905b815481529060010190602001808311610e1357829003601f168201915b5050505050905082565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634850c3cc836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610eaf57600080fd5b505afa158015610ec3573d6000803e3d6000fd5b505050506040513d6020811015610ed957600080fd5b81019080805190602001909291905050509050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f3257805160ff1916838001178555610f60565b82800160010185558215610f60579182015b82811115610f5f578251825591602001919060010190610f44565b5b509050610f6d9190611077565b5090565b6040518060c00160405280600690602082028038833980820191505090505090565b6040518060600160405280610fa661109c565b8152602001600063ffffffff168152602001600081525090565b826006600f0160109004810192821561104c5791602002820160005b8382111561101c57835183826101000a81548161ffff021916908361ffff1602179055509260200192600201602081600101049283019260010302610fdc565b801561104a5782816101000a81549061ffff021916905560020160208160010104928301926001030261101c565b505b50905061105991906110be565b5090565b604051806040016040528060008152602001606081525090565b61109991905b8082111561109557600081600090555060010161107d565b5090565b90565b6040518060c00160405280600690602082028038833980820191505090505090565b6110ec91905b808211156110e857600081816101000a81549061ffff0219169055506001016110c4565b5090565b9056fea265627a7a7231582024108f408500cc56b9a2619a4cafcadde014a3cb951da52cc0c94a7ca5c8727b64736f6c63430005100032",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80636f9fb98a1161004e5780636f9fb98a1461029657806381bbb705146102c15780638e4d6d08146102fc578063c648fefe146103845761007b565b8063107ab3e71461008057806320835e8c1461015257806322af00fa146101bf57806352dcdc0e14610221575b600080fd5b34801561008c57600080fd5b50610150600480360360408110156100a357600080fd5b8101908080359060200190929190803590602001906401000000008111156100ca57600080fd5b8201836020820111156100dc57600080fd5b803590602001918460018302840111640100000000831117156100fe57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061043f565b005b34801561015e57600080fd5b506101676105ad565b6040518084600660200280838360005b83811015610192578082015181840152602081019050610177565b505050509050018363ffffffff1663ffffffff168152602001828152602001935050505060405180910390f35b3480156101cb57600080fd5b506101f8600480360360208110156101e257600080fd5b81019080803590602001909291905050506106e2565b604051808363ffffffff1663ffffffff1681526020018281526020019250505060405180910390f35b610294600480360360e081101561023757600080fd5b810190808060c001906006806020026040519081016040528092919082600660200280828437600081840152601f19601f8201169050808301925050505050509192919290803563ffffffff169060200190929190505050610723565b005b3480156102a257600080fd5b506102ab6108e2565b6040518082815260200191505060405180910390f35b3480156102cd57600080fd5b506102fa600480360360208110156102e457600080fd5b81019080803590602001909291905050506108ea565b005b610382600480360360e081101561031257600080fd5b81019080803561ffff169060200190929190803561ffff169060200190929190803561ffff169060200190929190803561ffff169060200190929190803561ffff169060200190929190803561ffff169060200190929190803563ffffffff169060200190929190505050610bf2565b005b34801561039057600080fd5b506103bd600480360360208110156103a757600080fd5b8101908080359060200190929190505050610d71565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156104035780820151818401526020810190506103e8565b50505050905090810190601f1680156104305780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461048b57600080fd5b60006002604051806040016040528085815260200184815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010190805190602001906104f5929190610ef1565b505050905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550336006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826007600083815260200190815260200160002081905550505050565b6105b5610f71565b6000806105c0610f93565b6003600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548154811061060c57fe5b906000526020600020906003020160405180606001604052908160008201600680602002604051908101604052809291908260068015610689576020028201916000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116106505790505b505050505081526020016001820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600282015481525050905080600001518160200151826040015182925093509350935050909192565b600381815481106106ef57fe5b90600052602060002090600302016000915090508060010160009054906101000a900463ffffffff16908060020154905082565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461076f57600080fd5b81600080905060008090505b60068110156107b2576107a183826006811061079357fe5b602002015161ffff16610e3a565b82019150808060010191505061077b565b508034146107bf57600080fd5b60006001600360405180606001604052808881526020018763ffffffff168152602001600081525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001906006610829929190610fc0565b5060208201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060408201518160020155505003905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fb4c55452b3a0fcd370281067a5378b1d6b0adb1584de15f43fbe8dd04021610b816040518082815260200191505060405180910390a15050505050565b600047905090565b60008090505b600380549050811015610bee57610905610f93565b6003828154811061091257fe5b90600052602060002090600302016040518060600160405290816000820160068060200260405190810160405280929190826006801561098f576020028201916000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116109565790505b505050505081526020016001820160009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160028201548152505090506109d261105d565b6002826020015163ffffffff16815481106109e957fe5b906000526020600020906002020160405180604001604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aa55780601f10610a7a57610100808354040283529160200191610aa5565b820191906000526020600020905b815481529060010190602001808311610a8857829003601f168201915b50505050508152505090506000826040015190508482600001511415610bbb5760008090505b8360000151506006811015610bb957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ff6e34985600001518360068110610b2857fe5b6020020151886040518363ffffffff1660e01b8152600401808361ffff1681526020018281526020019250505060206040518083038186803b158015610b6d57600080fd5b505afa158015610b81573d6000803e3d6000fd5b505050506040513d6020811015610b9757600080fd5b8101908080519060200190929190505050820191508080600101915050610acb565b505b8060038581548110610bc957fe5b90600052602060002090600302016002018190555050505080806001019150506108f0565b5050565b610bfa610f71565b8781600060068110610c0857fe5b602002019061ffff16908161ffff16815250508681600160068110610c2957fe5b602002019061ffff16908161ffff16815250508581600260068110610c4a57fe5b602002019061ffff16908161ffff16815250508481600360068110610c6b57fe5b602002019061ffff16908161ffff16815250508381600460068110610c8c57fe5b602002019061ffff16908161ffff16815250508281600560068110610cad57fe5b602002019061ffff16908161ffff16815250503073ffffffffffffffffffffffffffffffffffffffff166352dcdc0e82846040518363ffffffff1660e01b81526004018083600660200280838360005b83811015610d18578082015181840152602081019050610cfd565b505050509050018263ffffffff1663ffffffff16815260200192505050600060405180830381600087803b158015610d4f57600080fd5b505af1158015610d63573d6000803e3d6000fd5b505050505050505050505050565b60028181548110610d7e57fe5b9060005260206000209060020201600091509050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e305780601f10610e0557610100808354040283529160200191610e30565b820191906000526020600020905b815481529060010190602001808311610e1357829003601f168201915b5050505050905082565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634850c3cc836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610eaf57600080fd5b505afa158015610ec3573d6000803e3d6000fd5b505050506040513d6020811015610ed957600080fd5b81019080805190602001909291905050509050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f3257805160ff1916838001178555610f60565b82800160010185558215610f60579182015b82811115610f5f578251825591602001919060010190610f44565b5b509050610f6d9190611077565b5090565b6040518060c00160405280600690602082028038833980820191505090505090565b6040518060600160405280610fa661109c565b8152602001600063ffffffff168152602001600081525090565b826006600f0160109004810192821561104c5791602002820160005b8382111561101c57835183826101000a81548161ffff021916908361ffff1602179055509260200192600201602081600101049283019260010302610fdc565b801561104a5782816101000a81549061ffff021916905560020160208160010104928301926001030261101c565b505b50905061105991906110be565b5090565b604051806040016040528060008152602001606081525090565b61109991905b8082111561109557600081600090555060010161107d565b5090565b90565b6040518060c00160405280600690602082028038833980820191505090505090565b6110ec91905b808211156110e857600081816101000a81549061ffff0219169055506001016110c4565b5090565b9056fea265627a7a7231582024108f408500cc56b9a2619a4cafcadde014a3cb951da52cc0c94a7ca5c8727b64736f6c63430005100032",
  "sourceMap": "105:171:1:-;;;292:42:2;260:74;;;;;;;;;;;;;;;;;;;;401:21;;;;;;;;;;;344:79;;;;;;;;;;;;;;;;;;;;105:171:1;8:9:-1;5:2;;;30:1;27;20:12;5:2;105:171:1;;;;;;;",
  "deployedSourceMap": "105:171:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;261:315:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;261:315:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;261:315:4;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;261:315:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;261:315:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;261:315:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;261:315:4;;;;;;;;;;;;;;;:::i;:::-;;994:195:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;994:195:3;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;994:195:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:17:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:17:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;659:17:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:257:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;257:257:3;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;257:257:3;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;167:106:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;167:106:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;687:548:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;687:548:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;687:548:2;;;;;;;;;;;;;;;;;:::i;:::-;;522:464:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;522:464:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;629:23:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;629:23:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;629:23:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;629:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;261:315:4;666:1;635:15;:27;651:10;635:27;;;;;;;;;;;;;;;;:32;627:41;;;;;;369:7;379;392:34;;;;;;;;399:13;392:34;;;;414:11;392:34;;;379:48;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;379:48:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;369:58;;468:2;438:15;:27;454:10;438:27;;;;;;;;;;;;;;;:32;;;;503:10;481:15;:19;497:2;481:19;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;553:13;524:22;:26;547:2;524:26;;;;;;;;;;;:42;;;;679:1;261:315;;:::o;994:195:3:-;1033:16;;:::i;:::-;1051:6;1059:3;1074:14;;:::i;:::-;1091:4;1096:9;:21;1106:10;1096:21;;;;;;;;;;;;;;;;1091:27;;;;;;;;;;;;;;;;;;1074:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1137:3;:13;;;1152:3;:12;;;1166:3;:14;;;1129:52;;;;;;;;;;994:195;;;:::o;659:17:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;257:257:3:-;1266:1;1241:9;:21;1251:10;1241:21;;;;;;;;;;;;;;;;:26;1233:35;;;;;;366:10;1362:19;1384:1;1362:23;;1401:6;1410:1;1401:10;;1396:131;1417:17;1413:1;:21;1396:131;;;1473:42;1501:10;1512:1;1501:13;;;;;;;;;;;1473:42;;:27;:42::i;:::-;1455:60;;;;1436:3;;;;;;;1396:131;;;;1560:14;1547:9;:27;1539:36;;;;;;388:7;442:1;398:4;408:30;;;;;;;;412:10;408:30;;;;424:9;408:30;;;;;;435:1;408:30;;;398:41;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;398:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:45;388:55;;478:2;454:9;:21;464:10;454:21;;;;;;;;;;;;;;;:26;;;;496:10;503:2;496:10;;;;;;;;;;;;;;;;;;1586:1;1279;;257:257;;:::o;167:106:1:-;217:7;243:21;236:28;;167:106;:::o;687:548:2:-;757:6;766:1;757:10;;752:472;774:4;:11;;;;770:1;:15;752:472;;;806:14;;:::i;:::-;823:4;828:1;823:7;;;;;;;;;;;;;;;;;;806:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;845:20;;:::i;:::-;868:7;876:3;:12;;;868:21;;;;;;;;;;;;;;;;;;;;845:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;904:9;916:3;:14;;;904:26;;971:13;948:6;:19;;;:36;945:225;;;1010:6;1019:1;1010:10;;1005:149;1026:3;:13;;;:20;;1022:1;:24;1005:149;;;1084:22;;;;;;;;;;;:37;;;1122:3;:13;;;1136:1;1122:16;;;;;;;;;;;1140:13;1084:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1084:70:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1084:70:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1084:70:2;;;;;;;;;;;;;;;;1075:79;;;;1048:3;;;;;;;1005:149;;;;945:225;1207:5;1186:4;1191:1;1186:7;;;;;;;;;;;;;;;;;;:18;;:26;;;;752:472;;;787:3;;;;;;;752:472;;;;687:548;:::o;522:464:3:-;696:27;;:::i;:::-;748:10;732;743:1;732:13;;;;;;;;;;:26;;;;;;;;;;;783:10;767;778:1;767:13;;;;;;;;;;:26;;;;;;;;;;;818:10;802;813:1;802:13;;;;;;;;;;:26;;;;;;;;;;;853:10;837;848:1;837:13;;;;;;;;;;:26;;;;;;;;;;;888:10;872;883:1;872:13;;;;;;;;;;:26;;;;;;;;;;;923:10;907;918:1;907:13;;;;;;;;;;:26;;;;;;;;;;;942:4;:13;;;956:10;968:9;942:36;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;942:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;942:36:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;942:36:3;;;;522:464;;;;;;;;:::o;629:23:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1243:143::-;1307:4;1331:22;;;;;;;;;;;:36;;;1368:9;1331:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1331:47:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1331:47:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1331:47:2;;;;;;;;;;;;;;;;1324:54;;1243:143;;;:::o;105:171:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;105:171:1;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;105:171:1;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.22 <0.6.0;\r\n\r\nimport \"./LeagueMembership.sol\";\r\nimport \"./LeagueOwnership.sol\";\r\n\r\ncontract League is LeagueMembership, LeagueOwnership {\r\n\r\n    function getContractBalance() public view returns(uint256){\r\n        return address(this).balance ;\r\n    }\r\n}\r\n",
  "sourcePath": "S:\\GitHub\\blockchain-fantasy-golf\\contracts\\League.sol",
  "ast": {
    "absolutePath": "/S/GitHub/blockchain-fantasy-golf/contracts/League.sol",
    "exportedSymbols": {
      "League": [
        208
      ]
    },
    "id": 209,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 190,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "/S/GitHub/blockchain-fantasy-golf/contracts/LeagueMembership.sol",
        "file": "./LeagueMembership.sol",
        "id": 191,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 547,
        "src": "36:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/S/GitHub/blockchain-fantasy-golf/contracts/LeagueOwnership.sol",
        "file": "./LeagueOwnership.sol",
        "id": 192,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 618,
        "src": "70:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 193,
              "name": "LeagueMembership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 546,
              "src": "124:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LeagueMembership_$546",
                "typeString": "contract LeagueMembership"
              }
            },
            "id": 194,
            "nodeType": "InheritanceSpecifier",
            "src": "124:16:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 195,
              "name": "LeagueOwnership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 617,
              "src": "142:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LeagueOwnership_$617",
                "typeString": "contract LeagueOwnership"
              }
            },
            "id": 196,
            "nodeType": "InheritanceSpecifier",
            "src": "142:15:1"
          }
        ],
        "contractDependencies": [
          343,
          546,
          617
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 208,
        "linearizedBaseContracts": [
          208,
          617,
          546,
          343
        ],
        "name": "League",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "225:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 202,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "251:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_League_$208",
                            "typeString": "contract League"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_League_$208",
                            "typeString": "contract League"
                          }
                        ],
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "243:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "243:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "243:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 200,
                  "id": 205,
                  "nodeType": "Return",
                  "src": "236:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "194:2:1"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "217:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "216:9:1"
            },
            "scope": 208,
            "src": "167:106:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 209,
        "src": "105:171:1"
      }
    ],
    "src": "0:278:1"
  },
  "legacyAST": {
    "absolutePath": "/S/GitHub/blockchain-fantasy-golf/contracts/League.sol",
    "exportedSymbols": {
      "League": [
        208
      ]
    },
    "id": 209,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 190,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "/S/GitHub/blockchain-fantasy-golf/contracts/LeagueMembership.sol",
        "file": "./LeagueMembership.sol",
        "id": 191,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 547,
        "src": "36:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/S/GitHub/blockchain-fantasy-golf/contracts/LeagueOwnership.sol",
        "file": "./LeagueOwnership.sol",
        "id": 192,
        "nodeType": "ImportDirective",
        "scope": 209,
        "sourceUnit": 618,
        "src": "70:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 193,
              "name": "LeagueMembership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 546,
              "src": "124:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LeagueMembership_$546",
                "typeString": "contract LeagueMembership"
              }
            },
            "id": 194,
            "nodeType": "InheritanceSpecifier",
            "src": "124:16:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 195,
              "name": "LeagueOwnership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 617,
              "src": "142:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LeagueOwnership_$617",
                "typeString": "contract LeagueOwnership"
              }
            },
            "id": 196,
            "nodeType": "InheritanceSpecifier",
            "src": "142:15:1"
          }
        ],
        "contractDependencies": [
          343,
          546,
          617
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 208,
        "linearizedBaseContracts": [
          208,
          617,
          546,
          343
        ],
        "name": "League",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "225:48:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 202,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "251:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_League_$208",
                            "typeString": "contract League"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_League_$208",
                            "typeString": "contract League"
                          }
                        ],
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "243:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "243:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "243:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 200,
                  "id": 205,
                  "nodeType": "Return",
                  "src": "236:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "194:2:1"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "217:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "216:9:1"
            },
            "scope": 208,
            "src": "167:106:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 209,
        "src": "105:171:1"
      }
    ],
    "src": "0:278:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {
        "0xb4c55452b3a0fcd370281067a5378b1d6b0adb1584de15f43fbe8dd04021610b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "betID",
              "type": "uint256"
            }
          ],
          "name": "NewBet",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x056C25dEF39BD54F32E27Af673D20e71545317e7",
      "transactionHash": "0xd3c9246112717935d9380ecd689079ed94c843843336e17d7f3e420cc2f432bf"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-11T20:39:45.080Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}